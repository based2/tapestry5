<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>war</packaging>
    <name>${artifactId} Tapestry 5 Application</name>
    #set( $D = '$' )
    <dependencies>
        <!-- Too set up an application with a database, change the artifactId below to
             tapestry-hibernate, and add a dependency on your JDBC driver. You'll also
             need to add Hibernate configuration files, such as hibernate.cfg.xml. -->
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-core</artifactId>
            <version>${D}{tapestry-release-version}</version>
        </dependency>

        <!-- This adds automatic compression of JavaScript and CSS when in production mode. -->
        <!-- <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-yuicompressor</artifactId>
            <version>${D}{tapestry-release-version}</version>
        </dependency> -->

        <!-- Uncomment this to add support for file uploads:

         <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-upload</artifactId>
            <version>${D}{tapestry-release-version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-hibernate</artifactId>
            <version>${D}{tapestry-release-version}</version>
        </dependency>

        -->

        <!-- A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the tests)
will fail, preventing Maven from packaging the WAR. Tapestry includes a large number
of testing facilities designed for use with TestNG (http://testng.org/), so it's recommended. -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${D}{testng-release-version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>${D}{easymock-release-version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-test</artifactId>
            <version>${D}{tapestry-release-version}</version>
            <scope>test</scope>
        </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.0.13</version>
            </dependency>
        <!-- Provided by the servlet container, but sometimes referenced in the application
       code. -->
         <dependency>
                  <groupId>javax.servlet</groupId>
                  <artifactId>javax.servlet-api</artifactId>
                  <version>3.0.1</version>
                  <scope>provided</scope>
         </dependency>

        <!-- Provide dependency to the Tapestry javadoc taglet which replaces the Maven component report -->
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-javadoc</artifactId>
            <version>${D}{tapestry-release-version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>
    <build>
        <finalName>${artifactId}</finalName>
        <plugins>
         <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>3.1</version>
               <configuration>
                   <source>1.6</source>
                   <target>1.6</target>
                   <optimize>false</optimize>
               </configuration>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.1.5</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.14</version>
                <configuration>
                    <systemPropertyVariables>
                        <tapestry.execution-mode>Qa</tapestry.execution-mode>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

             <!-- Run the application using "mvn jetty:run"
               http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html
               http://www.eclipse.org/jetty/documentation/current/ipaccess-handler.html
              -->
              <plugin>
               <groupId>org.eclipse.jetty</groupId>
               <artifactId>jetty-maven-plugin</artifactId>
               <version>9.0.3.v20130506</version>
                <configuration>
                    <reload>automatic</reload>
                    <scanIntervalSeconds>4</scanIntervalSeconds>
                    <stopPort>9999</stopPort>
                    <stopKey>key</stopKey>
                </configuration>

            </plugin>
        </plugins>
    </build>

    <reporting/>

    <repositories>
        <!-- This repository is only needed when the Tapestry version is a preview release, rather

             than a final release. -->
        <repository>
            <id>apache-staging</id>
            <url>https://repository.apache.org/content/groups/staging/</url>
        </repository>
        <repository>
            <id>apache-staging5.4</id>
            <url>https://repository.apache.org/content/repositories/orgapachetapestry-036/</url>
        </repository>
    </repositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- http://maven.apache.org/plugins/maven-resources-plugin/examples/binaries-filtering.html -->
        <tapestry-release-version>@tapestryReleaseVersion@</tapestry-release-version>
        <!-- <tapestry-release-version>5.4-alpha-6</tapestry-release-version> -->
        <servlet-api-release-version>@servletApiReleaseVersion@</servlet-api-release-version>
        <testng-release-version>@testngReleaseVersion@</testng-release-version>
        <easymock-release-version>@easymockReleaseVersion@</easymock-release-version>
        <scala.version>2.10.1</scala.version>
    </properties>
</project>
